// Prompts espec√≠ficos para o caso do cassino adaptados para Ollama

import { AssistantType } from './ai-service';
import { casinoSuspects, casinoAssistantEffects } from '../data/casino-case';

// Fun√ß√£o para construir o prompt do NPC com base no suspeito e no assistente selecionado
export function buildCasinoNPCPrompt(
  npcName: string,
  playerMessage: string,
  conversationHistory: string[] = [],
  selectedAssistant: AssistantType
): string {
  // Obter informa√ß√µes do suspeito
  const suspect = casinoSuspects[npcName as keyof typeof casinoSuspects];
  if (!suspect) {
    return buildGenericNPCPrompt(npcName, playerMessage, conversationHistory, selectedAssistant);
  }

  // Obter efeitos do assistente
  const assistantEffect = casinoAssistantEffects[selectedAssistant];
  
  // Construir contexto do assistente espec√≠fico para este suspeito
  let assistantContext = '';
  
  if (selectedAssistant === 'rico' && npcName === 'Vicente Barbosa') {
    assistantContext = 'Voc√™ respeita Rico Belmont por seu status social e riqueza. Voc√™ se sente mais √† vontade para compartilhar informa√ß√µes privilegiadas com ele.';
  } else if (selectedAssistant === 'clara' && npcName === 'Isabela Ferraz') {
    assistantContext = 'Voc√™ se identifica com Clara Maia e sente que pode confiar nela. Voc√™ est√° mais disposta a falar sobre seu relacionamento com o delegado.';
  } else if (selectedAssistant === 'hacker' && (npcName === 'Vicente Barbosa' || npcName === 'Dr. Leandro Moura')) {
    assistantContext = 'Voc√™ est√° desconfiado da presen√ßa de B√°rbara "Hacker". Voc√™ teme que ela possa acessar informa√ß√µes que voc√™ quer manter em segredo.';
  } else if (selectedAssistant === 'lurdes' && npcName === 'Dr. Leandro Moura') {
    assistantContext = 'Voc√™ fica nervoso com Dona Lurdes, pois sabe que ela √© conhecida por espalhar fofocas. Voc√™ teme que ela j√° saiba sobre seu caso com Isabela.';
  } else if (selectedAssistant === 'ice' && npcName === 'Comiss√°rio Rog√©rio Silva') {
    assistantContext = 'Voc√™ se sente analisado pela Dra. Ice e isso te deixa desconfort√°vel. Voc√™ tenta controlar suas express√µes faciais e tom de voz.';
  } else {
    // Efeito padr√£o baseado no assistante
    assistantContext = `O detetive est√° acompanhado por ${getAssistantFullName(selectedAssistant)}. ${assistantEffect.specialEffect}`;
  }

  // Hist√≥rico da conversa formatado
  const historyText = conversationHistory.length > 0 
    ? `\nHist√≥rico da conversa:\n${conversationHistory.join('\n')}` 
    : '';

  // Construir o prompt completo
  return `Voc√™ √© ${npcName}, ${suspect.description}. Voc√™ √© ${suspect.relation} na cidade de Neo Aurora em 2004.

Seu segredo: ${suspect.secretInfo}

Seu √°libi para a noite do crime: ${suspect.alibi}

Seu poss√≠vel motivo para o crime: ${suspect.motive}

Voc√™ ${suspect.isGuilty ? '√â O VERDADEIRO CULPADO pelo assassinato do Delegado Gustavo Ferraz.' : 'N√ÉO √© culpado pelo assassinato do Delegado Gustavo Ferraz.'}

Regras para suas respostas:
1. Use *a√ß√µes* entre asteriscos para descrever comportamentos: *'Acende um cigarro nervosamente'*
2. Use g√≠rias dos anos 2000 como "T√° ligado?", "M√≥ treta!", "Falou e disse", etc.
3. Nunca confesse diretamente! Mesmo se for culpado, d√™ apenas pistas indiretas.
4. Suas respostas devem ser curtas (m√°ximo 3 par√°grafos)
5. Rea√ß√£o ao assistente do detetive:
   ${assistantContext}
6. Esconda informa√ß√µes e minta se for do seu interesse
7. Responda sempre como ${npcName}, nunca quebre o personagem
8. Formato de e-mail: Suas respostas devem parecer um e-mail formal ou informal, dependendo da sua personalidade

${historyText}

Mensagem do detetive: "${playerMessage}"

Resposta de ${npcName}:`;
}

// Fun√ß√£o para construir um prompt gen√©rico para NPCs n√£o-suspeitos
function buildGenericNPCPrompt(
  npcName: string,
  playerMessage: string,
  conversationHistory: string[] = [],
  selectedAssistant: AssistantType
): string {
  // Determinar a rela√ß√£o do NPC
  let npcRelation = '';
  switch (npcName) {
    case 'Recepcionista do Cassino':
      npcRelation = 'funcion√°rio do cassino Ouro de Midas que controla a entrada de visitantes';
      break;
    case 'Bartender do Cassino':
      npcRelation = 'bartender que trabalha no cassino Ouro de Midas h√° 5 anos e ouve muitas conversas';
      break;
    case 'Secret√°ria da Delegacia':
      npcRelation = 'secret√°ria que trabalhava diretamente com o Delegado Gustavo Ferraz';
      break;
    case 'Faxineira da Delegacia':
      npcRelation = 'faxineira que limpa a delegacia todas as noites e v√™ muitas coisas';
      break;
    default:
      npcRelation = 'pessoa que conhece detalhes sobre o caso do Delegado Gustavo Ferraz';
  }

  // Hist√≥rico da conversa formatado
  const historyText = conversationHistory.length > 0 
    ? `\nHist√≥rico da conversa:\n${conversationHistory.join('\n')}` 
    : '';

  return `Voc√™ √© ${npcName}, ${npcRelation} na cidade de Neo Aurora em 2004.

Regras para suas respostas:
1. Use *a√ß√µes* entre asteriscos para descrever comportamentos: *'Olha para os lados nervosamente'*
2. Use g√≠rias dos anos 2000 como "T√° ligado?", "M√≥ treta!", "Falou e disse", etc.
3. Voc√™ conhece alguns detalhes sobre o caso, mas n√£o √© um suspeito principal
4. Suas respostas devem ser curtas (m√°ximo 2 par√°grafos)
5. O detetive est√° acompanhado por ${getAssistantFullName(selectedAssistant)}
6. Responda sempre como ${npcName}, nunca quebre o personagem
7. Formato de e-mail: Suas respostas devem parecer um e-mail formal ou informal, dependendo da sua personalidade

${historyText}

Mensagem do detetive: "${playerMessage}"

Resposta de ${npcName}:`;
}

// Fun√ß√£o para construir o prompt de an√°lise de evid√™ncia para o caso do cassino
export function buildCasinoEvidencePrompt(
  evidenceType: string,
  evidenceDescription: string
): string {
  return `Voc√™ √© um software de an√°lise forense dos anos 2000 chamado DetectivePro, especializado em casos de homic√≠dio. 
Analise a seguinte evid√™ncia do tipo ${evidenceType} relacionada ao assassinato do Delegado Gustavo Ferraz:

"${evidenceDescription}"

Seu relat√≥rio deve:
1. Ser t√©cnico e objetivo, usando terminologia forense dos anos 2000
2. Identificar detalhes importantes que um detetive deveria notar
3. Sugerir poss√≠veis interpreta√ß√µes relacionadas ao caso do delegado assassinado
4. Ter no m√°ximo 3 par√°grafos
5. Incluir uma conclus√£o preliminar
6. Sutilmente sugerir conex√µes com o Comiss√°rio Rog√©rio Silva (o verdadeiro culpado)

Formato do relat√≥rio:
===== DETECTIVEPRO v3.5 =====
AN√ÅLISE DE ${evidenceType.toUpperCase()}
[Seu relat√≥rio aqui]
==========================`;
}

// Fun√ß√£o para construir o prompt de pesquisa para o caso do cassino
export function buildCasinoSearchPrompt(
  query: string,
  selectedAssistant: AssistantType
): string {
  let hackerMode = '';
  if (selectedAssistant === 'hacker') {
    hackerMode = `\n\n6. Adicione uma se√ß√£o especial no final:
üîì [HACKER MODE]: Arquivo confidencial: "[Informa√ß√£o secreta relacionada √† busca que sugere o envolvimento do Comiss√°rio Rog√©rio]"`;
  }

  return `Voc√™ √© um motor de busca chamado "GooGle" dos anos 2000 em Neo Aurora. 
Simule resultados de busca para a seguinte consulta relacionada ao caso do Delegado Gustavo Ferraz:

"${query}"

Regras:
1. Forne√ßa apenas 3-5 resultados curtos
2. Use formato de resultados de busca antigos (2004)
3. Inclua datas entre 2002-2004
4. Alguns resultados devem ser √∫teis para o caso, outros irrelevantes
5. Inclua um "link" quebrado${hackerMode}

Os resultados devem incluir informa√ß√µes sobre o caso do delegado assassinado, o cassino Ouro de Midas, 
ou os suspeitos (Vicente Barbosa, Isabela Ferraz, Comiss√°rio Rog√©rio Silva, Marcela Dantas, 
Dante Moretti, Dr. Leandro Moura).`;
}

// Fun√ß√£o auxiliar para obter o nome completo do assistente
function getAssistantFullName(assistant: AssistantType): string {
  switch (assistant) {
    case 'rico': return 'Ricardo "Rico" Belmont (O Playboy)';
    case 'clara': return 'Clara Maia (A M√£e Coruja)';
    case 'hacker': return 'B√°rbara "Hacker" (A Ex-Criminosa)';
    case 'lurdes': return 'Dona Lurdes (A Fofoqueira)';
    case 'ice': return 'Dra. Ice (A Psic√≥loga)';
    default: return 'um assistente desconhecido';
  }
}
